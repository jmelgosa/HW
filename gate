<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clark Gate Tool</title>
    <!-- Inter Font -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        /* Custom styling for the radio button labels to look like buttons */
        input[type="radio"][name="manGateHeight"] + span {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.25rem;
            border-radius: 0.5rem;
            background-color: #1e3a8a; /* Darker blue for unselected */
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s, transform 0.1s;
            border: 1px solid #1e3a8a;
        }
        input[type="radio"][name="manGateHeight"]:checked + span {
            background-color: #2563eb; /* Blue for selected */
            border-color: #bfdbfe; /* Lighter border for selected */
            transform: scale(1.02);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        input[type="radio"][name="manGateHeight"]:hover + span:not(:checked) {
            background-color: #172554; /* Even darker blue on hover for unselected */
        }
        /* Hide the actual radio input visually */
        input[type="radio"][name="manGateHeight"] {
            position: absolute;
            opacity: 0;
            width: 0;
            height: 0;
        }
    </style>
</head>
<body class="bg-gray-900 flex items-center justify-center min-h-screen p-4">
    <div class="bg-gray-800 p-8 rounded-xl shadow-2xl w-full max-w-md border border-gray-700">
        <h1 class="text-3xl font-extrabold text-white text-center mb-8">Clark Gate Tool</h1>

        <div class="space-y-6">
            <!-- Total Project Feet Input -->
            <div>
                <label for="totalFeet" class="block text-gray-300 text-sm font-semibold mb-2">Total Project Length (feet):</label>
                <input type="number" id="totalFeet" placeholder="e.g., 150"
                       class="w-full p-3 bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
                       min="0">
            </div>

            <!-- Number of Man Gates Input -->
            <div>
                <label for="numManGates" class="block text-gray-300 text-sm font-semibold mb-2">Number of Man Gates:</label>
                <input type="number" id="numManGates" placeholder="e.g., 2"
                       class="w-full p-3 bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
                       min="0">
            </div>

            <!-- Man Gate Height Selection (Puzzle Set Style) -->
            <div>
                <label class="block text-gray-300 text-sm font-semibold mb-2">Man Gate Height (Select one):</label>
                <div class="flex space-x-4 justify-center">
                    <label>
                        <input type="radio" name="manGateHeight" value="5" checked>
                        <span>5 ft</span>
                    </label>
                    <label>
                        <input type="radio" name="manGateHeight" value="6">
                        <span>6 ft</span>
                    </label>
                </div>
            </div>

            <!-- Fencing Height Selection -->
            <div>
                <label for="fencingHeight" class="block text-gray-300 text-sm font-semibold mb-2">Fencing Height:</label>
                <select id="fencingHeight"
                        class="w-full p-3 bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200">
                    <option value="6">6 ft</option>
                    <option value="8" selected>8 ft</option>
                    <option value="10">10 ft</option>
                    <option value="12">12 ft</option>
                </select>
            </div>

            <!-- Calculate Button -->
            <button id="calculateBtn"
                    class="w-full bg-blue-800 text-white font-bold py-3 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-75 transition duration-300 ease-in-out transform hover:scale-105 shadow-lg">
                Calculate Materials
            </button>
        </div>

        <!-- Results Display Area -->
        <div id="results" class="mt-8 p-6 bg-blue-900 rounded-lg text-white shadow-inner hidden">
            <h2 class="text-xl font-bold mb-4 text-blue-100">Calculation Results:</h2>
            <p id="totalGateLength" class="mb-2"></p>
            <p id="remainingFencingLength" class="mb-2"></p>
            <p id="numFencingPanels" class="mb-2 font-bold text-lg text-green-300"></p> <!-- Emphasized -->
            <p id="totalFencingLengthUsed" class="mb-2"></p>
            <p id="totalProjectLengthUsed" class="mb-2"></p>
            <p id="excessLength" class="mb-2"></p>
            <p class="text-sm text-blue-200 mt-4 italic">
                *Assumptions: Man gates are assumed to be 5ft or 6ft wide based on their selected height. Fencing panels are assumed to be 8 feet long.
            </p>
            <p class="text-xs text-gray-400 mt-4 text-right">Built by Jonah Melgosa</p> <!-- Updated "Built by Jonah Melgosa" -->
        </div>

        <!-- Error Message Area -->
        <div id="errorMessage" class="mt-4 p-4 bg-red-800 text-white rounded-lg hidden">
            Please enter valid positive numbers for all fields.
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const totalFeetInput = document.getElementById('totalFeet');
            const numManGatesInput = document.getElementById('numManGates');
            const manGateHeightRadios = document.querySelectorAll('input[name="manGateHeight"]');
            const fencingHeightSelect = document.getElementById('fencingHeight');
            const calculateBtn = document.getElementById('calculateBtn');
            const resultsDiv = document.getElementById('results');
            const errorMessageDiv = document.getElementById('errorMessage');

            // Result display elements
            const totalGateLengthElem = document.getElementById('totalGateLength');
            const remainingFencingLengthElem = document.getElementById('remainingFencingLength');
            const numFencingPanelsElem = document.getElementById('numFencingPanels');
            const totalFencingLengthUsedElem = document.getElementById('totalFencingLengthUsed');
            const totalProjectLengthUsedElem = document.getElementById('totalProjectLengthUsed');
            const excessLengthElem = document.getElementById('excessLength');

            calculateBtn.addEventListener('click', () => {
                // Hide previous results and errors
                resultsDiv.classList.add('hidden');
                errorMessageDiv.classList.add('hidden');

                const totalFeet = parseFloat(totalFeetInput.value);
                const numManGates = parseInt(numManGatesInput.value);
                const selectedManGateHeight = document.querySelector('input[name="manGateHeight"]:checked').value;
                const manGateWidth = parseFloat(selectedManGateHeight); // Assuming gate width equals its height
                const fencingHeight = parseFloat(fencingHeightSelect.value); // This is just for descriptive output, panel length is fixed

                const FENCING_PANEL_LENGTH = 8; // Standard assumed fencing panel length in feet

                // Input validation
                if (isNaN(totalFeet) || totalFeet < 0 ||
                    isNaN(numManGates) || numManGates < 0) {
                    errorMessageDiv.classList.remove('hidden');
                    return;
                }

                // Calculate total length consumed by man gates
                const totalGateLength = numManGates * manGateWidth;

                // Check if gates exceed total project length
                if (totalGateLength > totalFeet) {
                    errorMessageDiv.textContent = `The total length required for ${numManGates} man gates (${totalGateLength} ft) exceeds the total project length (${totalFeet} ft). Please adjust your inputs.`;
                    errorMessageDiv.classList.remove('hidden');
                    return;
                }

                // Calculate remaining length for fencing
                const remainingFencingLength = totalFeet - totalGateLength;

                // Calculate number of fencing panels needed (round up to ensure full coverage)
                const numFencingPanels = Math.ceil(remainingFencingLength / FENCING_PANEL_LENGTH);

                // Calculate total fencing length actually used (due to rounding up panels)
                const totalFencingLengthUsed = numFencingPanels * FENCING_PANEL_LENGTH;

                // Calculate total project length used (gates + actual fencing panels)
                const totalProjectLengthUsed = totalGateLength + totalFencingLengthUsed;

                // Calculate any excess length due to rounding up fencing panels
                const excessLength = totalProjectLengthUsed - totalFeet;

                // Display results
                totalGateLengthElem.textContent = `Man Gates: ${numManGates} x ${manGateWidth} ft wide = ${totalGateLength.toFixed(2)} ft`;
                remainingFencingLengthElem.textContent = `Remaining length for Fencing: ${remainingFencingLength.toFixed(2)} ft`;
                numFencingPanelsElem.textContent = `Fencing Panels Needed: ${numFencingPanels} (for ${fencingHeight} ft height)`; // Emphasized
                totalFencingLengthUsedElem.textContent = `Total Fencing Length Used: ${totalFencingLengthUsed.toFixed(2)} ft`;
                totalProjectLengthUsedElem.textContent = `Total Project Length (Gates + Fencing): ${totalProjectLengthUsed.toFixed(2)} ft`;

                if (excessLength > 0) {
                    excessLengthElem.textContent = `Excess Length (due to full panels): ${excessLength.toFixed(2)} ft`;
                    excessLengthElem.classList.remove('text-green-300');
                    excessLengthElem.classList.add('text-yellow-300');
                } else {
                    excessLengthElem.textContent = `No excess length.`;
                    excessLengthElem.classList.remove('text-yellow-300');
                    excessLengthElem.classList.add('text-green-300');
                }

                resultsDiv.classList.remove('hidden');
            });
        });
    </script>
</body>
</html>
